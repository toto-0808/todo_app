@model todo_app.ViewModels.SearchTaskViewModel

@{
    ViewBag.Title = "Todo一覧";
}

<h2>Todo一覧</h2>

<p class="btn btn-outline-primary btn-md">
    @Html.ActionLink("Create New Task", "Create")
</p>

<p class="btn btn-outline-primary btn-md">
    @Html.ActionLink("Check & Create New TaskCategory", "../TaskCategories/Index")
</p>

<div class="accordion" id="search">
    <div class="accordion-item">
        <h2 class="accordion-header">
            <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#searchDetails" aria-expanded="true" aria-controls="searchDetails">
                Search
            </button>
        </h2>
        <div id="searchDetails" class="accordion-collapse collapse show" data-bs-parent="#search">
            <div class="accordion-body">

                @using (Html.BeginForm("Index", "Tasks", FormMethod.Get))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal">
                        <div class="form-group">
                            @Html.LabelFor(model => model.TaskCategoryList, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownListFor(model => model.TaskCategoryId, Model.TaskCategoryList, "カテゴリを絞り込む", new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.Title, new { @class = "form-control", placeholder = "文字列検索" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.Detail, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextBoxFor(model => model.Detail, new { @class = "form-control", placeholder = "文字列検索" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.DueDateFrom, htmlAttributes: new { @class = "control-label col-md-2" })
                            @Html.LabelFor(model => model.DueDateTo, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DueDateFrom, "期限日Fromで絞り込む", new { @class = "form-control" })
                                ～　
                                @Html.EditorFor(model => model.DueDateTo, "期限日Toで絞り込む", new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.IsStarted, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EnumDropDownListFor(model => model.IsStarted, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(model => model.IsCompleted, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EnumDropDownListFor(model => model.IsCompleted, new { @class = "form-control" })
                            </div>
                        </div>
                        <br />
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Search" class="btn btn-default btn-outline-primary" />
                                @*クリアボタンを実装する*@
                                @*<input type="button" value="Clear" class="btn btn-default btn-outline-secondary" id="clear" />*@
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<hr/>

<table class="table">
    <tr>
        <th>
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TaskList.First().Category.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TaskList.First().Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TaskList.First().Detail)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TaskList.First().DueDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TaskList.First().IsStarted)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.TaskList.First().IsCompleted)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.TaskList)
    {
        <tr>
            @if (item.Category != null)
            {
                <td style="color:@item.Category.Color.ToString().ToLower()">●</td>
            }
            else
            {
                <td></td>
            }
            <td>
                @Html.DisplayFor(modelItem => item.Category.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Detail)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DueDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsStarted)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsCompleted)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>
        </tr>
    }

</table>